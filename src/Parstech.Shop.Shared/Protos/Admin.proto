syntax = "proto3";

option csharp_namespace = "Parstech.Shop.Shared.Protos";

package parstech;

import "google/protobuf/timestamp.proto";
import "Common.proto";

// ADMIN SERVICE DEFINITIONS

// Product Admin Service
service ProductAdminService {
  // Product read operations
  rpc GetProductsForAdmin (ProductParameterRequest) returns (ProductPageingDto);
  rpc GetProduct (ProductRequest) returns (ProductDto);
  rpc GetProductExcelReport (ProductParameterRequest) returns (ProductExcelResponse);
  rpc GetProductsCountByCategory (CategoryIdRequest) returns (CountResponse);
  
  // Product write operations
  rpc CreateProduct (ProductDto) returns (ResponseDto);
  rpc UpdateProduct (ProductDto) returns (ResponseDto);
  rpc DeleteProduct (ProductRequest) returns (ResponseDto);
  rpc QuickEditProduct (ProductQuickEditRequest) returns (ResponseDto);
  
  // Product batch operations
  rpc ImportProducts (ImportProductsRequest) returns (ImportProductsResponse);
  rpc ExportProducts (ExportProductsRequest) returns (ExportProductsResponse);
}

// Product Components Admin Service
service ProductComponentsAdminService {
  // Component operations
  rpc GetProductComponents (ProductIdRequest) returns (ProductComponentsResponse);
  rpc AddProductComponent (ProductComponentRequest) returns (ResponseDto);
  rpc UpdateProductComponent (ProductComponentRequest) returns (ResponseDto);
  rpc DeleteProductComponent (ProductComponentIdRequest) returns (ResponseDto);
}

// Product Inventory Admin Service
service ProductInventoryAdminService {
  // Inventory operations
  rpc GetProductInventory (ProductIdRequest) returns (ProductInventoryResponse);
  rpc UpdateProductInventory (UpdateInventoryRequest) returns (ResponseDto);
  rpc AdjustProductInventory (InventoryAdjustmentRequest) returns (ResponseDto);
  rpc GetInventoryHistory (ProductIdRequest) returns (InventoryHistoryResponse);
}

// Product Detail Admin Service
service ProductDetailAdminService {
  // Product detail operations
  rpc GetProductDetailsForAdmin (ProductIdRequest) returns (ProductDetailAdminResponse);
  rpc UpdateProductDetails (ProductDetailUpdateRequest) returns (ResponseDto);
  rpc UpdateProductSeo (ProductSeoUpdateRequest) returns (ResponseDto);
  rpc ManageProductGallery (ProductGalleryUpdateRequest) returns (ResponseDto);
  rpc ManageProductAttributes (ProductAttributesUpdateRequest) returns (ResponseDto);
  rpc ManageRelatedProducts (RelatedProductsUpdateRequest) returns (ResponseDto);
}

// Category Admin Service
service CategoryAdminService {
  // Category operations
  rpc GetCategoriesForAdmin (CategoryParameterRequest) returns (CategoryPageingDto);
  rpc GetCategory (CategoryRequest) returns (CategoryDto);
  rpc CreateCategory (CategoryDto) returns (ResponseDto);
  rpc UpdateCategory (CategoryDto) returns (ResponseDto);
  rpc DeleteCategory (CategoryRequest) returns (ResponseDto);
  rpc GetParentCategories (EmptyRequest) returns (CategoryListResponse);
}

// Brand Admin Service
service BrandAdminService {
  // Brand operations
  rpc GetBrandsForAdmin (BrandParameterRequest) returns (BrandPageingDto);
  rpc GetBrand (BrandRequest) returns (BrandDto);
  rpc CreateBrand (BrandDto) returns (ResponseDto);
  rpc UpdateBrand (BrandDto) returns (ResponseDto);
  rpc DeleteBrand (BrandRequest) returns (ResponseDto);
}

// Property Admin Service
service PropertyAdminService {
  // Property operations
  rpc GetPropertyById (PropertyRequest) returns (PropertyDto);
  rpc GetProperties (PropertyParameterRequest) returns (PropertyPagingDto);
  rpc CreateProperty (PropertyRequest) returns (ResponseDto);
  rpc UpdateProperty (PropertyRequest) returns (ResponseDto);
  rpc DeleteProperty (PropertyRequest) returns (ResponseDto);
  rpc GetPropertiesByProductId (GetPropertiesByProductIdRequest) returns (GetPropertiesByProductIdResponse);
  
  rpc GetAllCategories (EmptyRequest) returns (CategoryListDto);
  rpc CreateOrUpdatePropertyCategory (PropertyCategoryRequest) returns (ResponseDto);
}

// Store Admin Service
service StoreAdminService {
  // Store operations
  rpc GetStoresForAdmin (StoreParameterRequest) returns (StorePageingDto);
  rpc GetStore (StoreRequest) returns (StoreDto);
  rpc CreateStore (StoreDto) returns (ResponseDto);
  rpc UpdateStore (StoreDto) returns (ResponseDto);
  rpc DeleteStore (StoreRequest) returns (ResponseDto);
}

// User Admin Service
service UserAdminService {
  // User operations
  rpc GetUsersForAdmin (UserParameterRequest) returns (UserPageingDto);
  rpc GetUser (UserRequest) returns (UserDto);
  rpc CreateUserAdmin (UserDto) returns (ResponseDto);
  rpc UpdateUserAdmin (UserDto) returns (ResponseDto);
  rpc DeleteUserAdmin (UserRequest) returns (ResponseDto);
  rpc ResetUserPassword (ResetPasswordRequest) returns (ResponseDto);
  rpc ManageUserRoles (UserRolesRequest) returns (ResponseDto);
  rpc GetUserForAdmin (GetUserRequest) returns (GetUserResponse);
  rpc CreateUser (CreateUserRequest) returns (UserResponse);
  rpc UpdateUser (UpdateUserRequest) returns (UserResponse);
  rpc DeleteUser (DeleteUserRequest) returns (ResponseDto);
  rpc BanUser (BanUserRequest) returns (ResponseDto);
  rpc UnbanUser (UnbanUserRequest) returns (ResponseDto);
  rpc VerifyUser (VerifyUserRequest) returns (ResponseDto);
  rpc AssignRolesToUser (AssignRolesToUserRequest) returns (ResponseDto);
  rpc GetUserActivityLog (GetUserActivityLogRequest) returns (UserActivityLogResponse);
  rpc ExportUsers (ExportUsersRequest) returns (ExportUsersResponse);
}

// Role Admin Service
service RoleAdminService {
  // Role operations
  rpc GetRolesForAdmin (RoleParameterRequest) returns (RolePageingDto);
  rpc GetRole (RoleRequest) returns (RoleDto);
  rpc CreateRole (RoleDto) returns (ResponseDto);
  rpc UpdateRole (RoleDto) returns (ResponseDto);
  rpc DeleteRole (RoleRequest) returns (ResponseDto);
  rpc GetPermissions (EmptyRequest) returns (PermissionsResponse);
}
