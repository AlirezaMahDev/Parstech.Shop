syntax = "proto3";

option csharp_namespace = "Parstech.Shop.Shared.Protos.Admin";

package admin;

import "google/protobuf/timestamp.proto";
import "Common.proto";

// ADMIN SERVICE DEFINITIONS

// Product Admin Service
service ProductAdminService {
  // Product read operations
  rpc GetProductsForAdmin (ProductParameterRequest) returns (ProductPageingDto);
  rpc GetProduct (ProductRequest) returns (ProductDto);
  rpc GetProductExcelReport (ProductParameterRequest) returns (ProductExcelResponse);
  rpc GetProductsCountByCategory (CategoryIdRequest) returns (CountResponse);
  
  // Product write operations
  rpc CreateProduct (ProductDto) returns (ResponseDto);
  rpc UpdateProduct (ProductDto) returns (ResponseDto);
  rpc DeleteProduct (ProductRequest) returns (ResponseDto);
  rpc QuickEditProduct (ProductQuickEditRequest) returns (ResponseDto);
  
  // Product batch operations
  rpc ImportProducts (ImportProductsRequest) returns (ImportProductsResponse);
  rpc ExportProducts (ExportProductsRequest) returns (ExportProductsResponse);
}

// Product Components Admin Service
service ProductComponentsAdminService {
  // Component operations
  rpc GetProductComponents (ProductIdRequest) returns (ProductComponentsResponse);
  rpc AddProductComponent (ProductComponentRequest) returns (ResponseDto);
  rpc UpdateProductComponent (ProductComponentRequest) returns (ResponseDto);
  rpc DeleteProductComponent (ProductComponentIdRequest) returns (ResponseDto);
}

// Product Inventory Admin Service
service ProductInventoryAdminService {
  // Inventory operations
  rpc GetProductInventory (ProductIdRequest) returns (ProductInventoryResponse);
  rpc UpdateProductInventory (UpdateInventoryRequest) returns (ResponseDto);
  rpc AdjustProductInventory (InventoryAdjustmentRequest) returns (ResponseDto);
  rpc GetInventoryHistory (ProductIdRequest) returns (InventoryHistoryResponse);
}

// Product Detail Admin Service
service ProductDetailAdminService {
  // Product detail operations
  rpc GetProductDetailsForAdmin (ProductIdRequest) returns (ProductDetailAdminResponse);
  rpc UpdateProductDetails (ProductDetailUpdateRequest) returns (ResponseDto);
  rpc UpdateProductSeo (ProductSeoUpdateRequest) returns (ResponseDto);
  rpc ManageProductGallery (ProductGalleryUpdateRequest) returns (ResponseDto);
  rpc ManageProductAttributes (ProductAttributesUpdateRequest) returns (ResponseDto);
  rpc ManageRelatedProducts (RelatedProductsUpdateRequest) returns (ResponseDto);
}

// Category Admin Service
service CategoryAdminService {
  // Category operations
  rpc GetCategoriesForAdmin (CategoryParameterRequest) returns (CategoryPageingDto);
  rpc GetCategory (CategoryRequest) returns (CategoryDto);
  rpc CreateCategory (CategoryDto) returns (ResponseDto);
  rpc UpdateCategory (CategoryDto) returns (ResponseDto);
  rpc DeleteCategory (CategoryRequest) returns (ResponseDto);
  rpc GetParentCategories (EmptyRequest) returns (CategoryListResponse);
}

// Brand Admin Service
service BrandAdminService {
  // Brand operations
  rpc GetBrandsForAdmin (BrandParameterRequest) returns (BrandPageingDto);
  rpc GetBrand (BrandRequest) returns (BrandDto);
  rpc CreateBrand (BrandDto) returns (ResponseDto);
  rpc UpdateBrand (BrandDto) returns (ResponseDto);
  rpc DeleteBrand (BrandRequest) returns (ResponseDto);
}

// Property Admin Service
service PropertyAdminService {
  // Property operations
  rpc GetPropertyById (PropertyRequest) returns (PropertyDto);
  rpc GetProperties (PropertyParameterRequest) returns (PropertyPagingDto);
  rpc CreateProperty (PropertyRequest) returns (ResponseDto);
  rpc UpdateProperty (PropertyRequest) returns (ResponseDto);
  rpc DeleteProperty (PropertyRequest) returns (ResponseDto);
  rpc GetPropertiesByProductId (GetPropertiesByProductIdRequest) returns (GetPropertiesByProductIdResponse);
  
  rpc GetAllCategories (EmptyRequest) returns (CategoryListDto);
  rpc CreateOrUpdatePropertyCategory (PropertyCategoryRequest) returns (ResponseDto);
}

// Store Admin Service
service StoreAdminService {
  // Store operations
  rpc GetStoresForAdmin (StoreParameterRequest) returns (StorePageingDto);
  rpc GetStore (StoreRequest) returns (StoreDto);
  rpc CreateStore (StoreDto) returns (ResponseDto);
  rpc UpdateStore (StoreDto) returns (ResponseDto);
  rpc DeleteStore (StoreRequest) returns (ResponseDto);
}

// User Admin Service
service UserAdminService {
  // User operations
  rpc GetUsersForAdmin (UserParameterRequest) returns (UserPageingDto);
  rpc GetUser (UserRequest) returns (UserDto);
  rpc CreateUser (UserDto) returns (ResponseDto);
  rpc UpdateUser (UserDto) returns (ResponseDto);
  rpc DeleteUser (UserRequest) returns (ResponseDto);
  rpc ResetUserPassword (ResetPasswordRequest) returns (ResponseDto);
  rpc ManageUserRoles (UserRolesRequest) returns (ResponseDto);
}

// Role Admin Service
service RoleAdminService {
  // Role operations
  rpc GetRolesForAdmin (RoleParameterRequest) returns (RolePageingDto);
  rpc GetRole (RoleRequest) returns (RoleDto);
  rpc CreateRole (RoleDto) returns (ResponseDto);
  rpc UpdateRole (RoleDto) returns (ResponseDto);
  rpc DeleteRole (RoleRequest) returns (ResponseDto);
  rpc GetPermissions (EmptyRequest) returns (PermissionsResponse);
}

// MESSAGES

message EmptyRequest {}

// Requests
message ProductParameterRequest {
  int32 page_number = 1;
  int32 page_size = 2;
  string search_term = 3;
  int64 category_id = 4;
  string sort_field = 5;
  bool ascending = 6;
  bool include_unpublished = 7;
}

message ProductRequest {
  int64 id = 1;
  string sku = 2;
}

message ProductIdRequest {
  int64 product_id = 1;
}

message CategoryIdRequest {
  int64 category_id = 1;
}

message ProductQuickEditRequest {
  int64 id = 1;
  double price = 2;
  double sale_price = 3;
  bool on_sale = 4;
  bool in_stock = 5;
  int32 stock_quantity = 6;
  bool track_inventory = 7;
  bool published = 8;
}

message ImportProductsRequest {
  bytes file_data = 1;
  string file_name = 2;
  bool update_existing = 3;
}

message ExportProductsRequest {
  string format = 1; // "csv", "excel", "json"
  int64 category_id = 2;
  string search_term = 3;
  bool include_unpublished = 4;
}

message ProductComponentRequest {
  int64 id = 1;
  int64 product_id = 2;
  int64 component_product_id = 3;
  string component_name = 4;
  int32 quantity = 5;
  bool required = 6;
  double price_adjustment = 7;
  double price_adjustment_type = 8; // 0: Fixed, 1: Percentage
  int32 display_order = 9;
}

message ProductComponentIdRequest {
  int64 id = 1;
  int64 product_id = 2;
}

message UpdateInventoryRequest {
  int64 product_id = 1;
  bool track_inventory = 2;
  bool allow_backorders = 3;
  int32 stock_quantity = 4;
  int32 low_stock_threshold = 5;
  repeated VariantInventoryDto variants = 6;
}

message InventoryAdjustmentRequest {
  int64 product_id = 1;
  int64 variant_id = 2;
  int32 quantity = 3;
  string reason = 4;
  string notes = 5;
}

message ProductDetailUpdateRequest {
  int64 product_id = 1;
  string name = 2;
  string description = 3;
  string short_description = 4;
  string sku = 5;
  double price = 6;
  double sale_price = 7;
  bool on_sale = 8;
  int64 category_id = 9;
  int64 brand_id = 10;
}

message ProductSeoUpdateRequest {
  int64 product_id = 1;
  string meta_title = 2;
  string meta_description = 3;
  string meta_keywords = 4;
  string slug = 5;
  bool no_index = 6;
}

message ProductGalleryUpdateRequest {
  int64 product_id = 1;
  repeated GalleryImageDto images = 2;
  int64 main_image_id = 3;
}

message ProductAttributesUpdateRequest {
  int64 product_id = 1;
  repeated ProductPropertyDto properties = 2;
}

message RelatedProductsUpdateRequest {
  int64 product_id = 1;
  repeated int64 related_product_ids = 2;
  repeated int64 cross_sell_product_ids = 3;
  repeated int64 upsell_product_ids = 4;
}

message CategoryParameterRequest {
  int32 page_number = 1;
  int32 page_size = 2;
  string search_term = 3;
  int64 parent_id = 4;
}

message CategoryRequest {
  int64 id = 1;
  string slug = 2;
}

message BrandParameterRequest {
  int32 page_number = 1;
  int32 page_size = 2;
  string search_term = 3;
  bool featured_only = 4;
}

message BrandRequest {
  int64 id = 1;
  string slug = 2;
}

message PropertyRequest {
  int64 id = 1;
  string name = 2;
  string display_name = 3;
  string description = 4;
  string type = 5;
  int32 display_order = 6;
  bool filterable = 7;
}

message PropertyParameterRequest {
  int32 page_number = 1;
  int32 page_size = 2;
  string search_term = 3;
  string type = 4;
}

message GetPropertiesByProductIdRequest {
  int64 product_id = 1;
}

message PropertyCategoryRequest {
  int64 property_id = 1;
  int64 category_id = 2;
  bool is_required = 3;
  bool is_filterable = 4;
  bool is_variant = 5;
}

message StoreParameterRequest {
  int32 page_number = 1;
  int32 page_size = 2;
  string search_term = 3;
  bool active_only = 4;
}

message StoreRequest {
  int64 id = 1;
  string code = 2;
}

message UserParameterRequest {
  int32 page_number = 1;
  int32 page_size = 2;
  string search_term = 3;
  string role = 4;
  bool active_only = 5;
}

message UserRequest {
  int64 id = 1;
  string email = 2;
}

message ResetPasswordRequest {
  int64 user_id = 1;
  string new_password = 2;
  bool require_change = 3;
}

message UserRolesRequest {
  int64 user_id = 1;
  repeated string role_names = 2;
  bool overwrite_existing = 3;
}

message RoleParameterRequest {
  int32 page_number = 1;
  int32 page_size = 2;
  string search_term = 3;
  bool system_roles_only = 4;
}

message RoleRequest {
  string id = 1;
  string name = 2;
}

// Responses
message CountResponse {
  int32 count = 1;
}

message ProductExcelResponse {
  bytes file_data = 1;
  string file_name = 2;
}

message ImportProductsResponse {
  bool success = 1;
  int32 total_products = 2;
  int32 created_count = 3;
  int32 updated_count = 4;
  int32 failed_count = 5;
  repeated string error_messages = 6;
}

message ExportProductsResponse {
  bool success = 1;
  bytes file_data = 2;
  string file_name = 3;
  int32 total_products = 4;
  string format = 5;
}

message ProductComponentsResponse {
  repeated ProductComponentDto components = 1;
}

message ProductInventoryResponse {
  bool track_inventory = 1;
  bool allow_backorders = 2;
  int32 stock_quantity = 3;
  int32 reserved_quantity = 4;
  int32 available_quantity = 5;
  int32 low_stock_threshold = 6;
  bool is_in_stock = 7;
  string stock_status = 8;
  repeated VariantInventoryDto variants = 9;
}

message InventoryHistoryResponse {
  repeated InventoryHistoryItemDto history = 1;
}

message ProductDetailAdminResponse {
  int64 id = 1;
  string name = 2;
  string description = 3;
  string short_description = 4;
  string sku = 5;
  double price = 6;
  double sale_price = 7;
  bool on_sale = 8;
  int64 category_id = 9;
  string category_name = 10;
  int64 brand_id = 11;
  string brand_name = 12;
  bool published = 13;
  bool featured = 14;
  bool is_new = 15;
  string tax_class = 16;
  double weight = 17;
  double length = 18;
  double width = 19;
  double height = 20;
  string dimensions_unit = 21;
  double shipping_cost = 22;
  bool free_shipping = 23;
  string meta_title = 24;
  string meta_description = 25;
  string meta_keywords = 26;
  string slug = 27;
  repeated GalleryImageDto gallery = 28;
  repeated ProductPropertyDto properties = 29;
  repeated ProductVariantDto variants = 30;
  repeated RelatedProductDto related_products = 31;
  repeated RelatedProductDto cross_sell_products = 32;
  repeated RelatedProductDto upsell_products = 33;
  google.protobuf.Timestamp created_date = 34;
  google.protobuf.Timestamp updated_date = 35;
}

message CategoryPageingDto {
  repeated CategoryDto items = 1;
  int32 total_count = 2;
  int32 total_pages = 3;
  int32 current_page = 4;
}

message CategoryListResponse {
  repeated CategoryDto categories = 1;
}

message BrandPageingDto {
  repeated BrandDto items = 1;
  int32 total_count = 2;
  int32 total_pages = 3;
  int32 current_page = 4;
}

message PropertyPagingDto {
  repeated PropertyDto items = 1;
  int32 total_count = 2;
  int32 total_pages = 3;
  int32 current_page = 4;
}

message GetPropertiesByProductIdResponse {
  repeated PropertyDto properties = 1;
}

message CategoryListDto {
  repeated CategoryDto categories = 1;
}

message StorePageingDto {
  repeated StoreDto items = 1;
  int32 total_count = 2;
  int32 total_pages = 3;
  int32 current_page = 4;
}

message UserPageingDto {
  repeated UserDto items = 1;
  int32 total_count = 2;
  int32 total_pages = 3;
  int32 current_page = 4;
}

message RolePageingDto {
  repeated RoleDto items = 1;
  int32 total_count = 2;
  int32 total_pages = 3;
  int32 current_page = 4;
}

message PermissionsResponse {
  repeated PermissionDto permissions = 1;
}

message ProductPageingDto {
  repeated ProductDto items = 1;
  int32 total_count = 2;
  int32 total_pages = 3;
  int32 current_page = 4;
  bool has_next = 5;
  bool has_previous = 6;
}

// Data DTOs
message ProductDto {
  int64 id = 1;
  string name = 2;
  string description = 3;
  string short_description = 4;
  string sku = 5;
  double price = 6;
  double sale_price = 7;
  bool on_sale = 8;
  int64 category_id = 9;
  string category_name = 10;
  int64 brand_id = 11;
  string brand_name = 12;
  string main_image = 13;
  bool published = 14;
  bool featured = 15;
  bool is_new = 16;
  int32 stock_quantity = 17;
  bool in_stock = 18;
  bool track_inventory = 19;
  string tax_class = 20;
  double weight = 21;
  google.protobuf.Timestamp created_date = 22;
  google.protobuf.Timestamp updated_date = 23;
  int32 view_count = 24;
  int32 order_count = 25;
  double rating = 26;
  string slug = 27;
}

message ProductComponentDto {
  int64 id = 1;
  int64 product_id = 2;
  int64 component_product_id = 3;
  string component_name = 4;
  string component_sku = 5;
  string component_image = 6;
  int32 quantity = 7;
  bool required = 8;
  double price_adjustment = 9;
  double price_adjustment_type = 10; // 0: Fixed, 1: Percentage
  int32 display_order = 11;
}

message VariantInventoryDto {
  int64 variant_id = 1;
  string variant_name = 2;
  string sku = 3;
  int32 stock_quantity = 4;
  int32 reserved_quantity = 5;
  bool in_stock = 6;
}

message InventoryHistoryItemDto {
  int64 id = 1;
  int64 product_id = 2;
  int64 variant_id = 3;
  string product_name = 4;
  string variant_name = 5;
  string sku = 6;
  int32 adjustment = 7;
  int32 quantity_before = 8;
  int32 quantity_after = 9;
  string reason = 10;
  string notes = 11;
  string created_by = 12;
  google.protobuf.Timestamp created_date = 13;
}

message CategoryDto {
  int64 id = 1;
  string name = 2;
  string description = 3;
  string slug = 4;
  string image_url = 5;
  int64 parent_id = 6;
  string parent_name = 7;
  int32 level = 8;
  int32 display_order = 9;
  bool is_active = 10;
  bool is_featured = 11;
  int32 product_count = 12;
  string meta_title = 13;
  string meta_description = 14;
}

message BrandDto {
  int64 id = 1;
  string name = 2;
  string description = 3;
  string slug = 4;
  string logo_url = 5;
  string website = 6;
  string country = 7;
  string founded_year = 8;
  bool is_featured = 9;
  int32 product_count = 10;
}

message PropertyDto {
  int64 id = 1;
  string name = 2;
  string display_name = 3;
  string description = 4;
  string type = 5; // "text", "number", "boolean", "select", "multiselect", "color", "date"
  string unit = 6;
  int32 display_order = 7;
  bool is_searchable = 8;
  bool is_comparable = 9;
  bool is_filterable = 10;
  bool is_variant = 11;
  bool is_required = 12;
  repeated string values = 13;
  repeated int64 category_ids = 14;
}

message StoreDto {
  int64 id = 1;
  string name = 2;
  string code = 3;
  string description = 4;
  string address_line1 = 5;
  string address_line2 = 6;
  string city = 7;
  string state = 8;
  string postal_code = 9;
  string country = 10;
  string phone = 11;
  string email = 12;
  string hours = 13;
  bool is_active = 14;
}

message UserDto {
  int64 id = 1;
  string username = 2;
  string email = 3;
  string first_name = 4;
  string last_name = 5;
  string phone = 6;
  bool active = 7;
  bool email_verified = 8;
  repeated string roles = 9;
  google.protobuf.Timestamp created_date = 10;
  google.protobuf.Timestamp last_login_date = 11;
}

message RoleDto {
  string id = 1;
  string name = 2;
  string description = 3;
  bool is_system = 4;
  repeated string permissions = 5;
  int32 user_count = 6;
}

message PermissionDto {
  string id = 1;
  string name = 2;
  string group = 3;
  string description = 4;
}

message ProductPropertyDto {
  int64 property_id = 1;
  string property_name = 2;
  string value = 3;
  int64 property_value_id = 4;
}

message ProductVariantDto {
  int64 id = 1;
  string name = 2;
  string sku = 3;
  double price = 4;
  double sale_price = 5;
  bool on_sale = 6;
  int32 stock_quantity = 7;
  bool in_stock = 8;
  string image_url = 9;
}

message GalleryImageDto {
  int64 id = 1;
  string url = 2;
  string thumbnail_url = 3;
  string alt_text = 4;
  int32 sort_order = 5;
  bool is_main = 6;
}

message RelatedProductDto {
  int64 id = 1;
  string name = 2;
  string sku = 3;
  double price = 4;
  string image_url = 5;
  string relationship_type = 6; // "related", "cross-sell", "upsell"
  int32 sort_order = 7;
}

message ResponseDto {
  bool success = 1;
  string message = 2;
  int32 code = 3;
} 